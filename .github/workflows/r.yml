name: GitHub-auto-release

on:
  push:
    tags:
      - 'v_*'
    branches:
      # - master
      - develop

jobs:
  release:
    name: Create Relaese
    runs-on: ubuntu-latest
    steps:
      # ソースコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v2

      # タグバージョンを取得する
      - name: Get Tag Version
        id: get-version
        run: |
          echo "start : --------"
          echo "${GITHUB_BASE_REF}"
          echo "${GITHUB_REF#refs/heads/}"
          echo "${GITHUB_HEAD_REF}"
          echo "${GITHUB_REF}"
          echo "${{ github.ref }}"
          echo "<< >>"
          echo "::set-output name=tagVersion::${GITHUB_REF##*/}"
          echo "end : --------"

      # Javaのセットアップ(spring-io/github-changelog-generator 実行用)
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x

      # リリースノート(CHANGELOG.md) の出力 ★本日の記事にて紹介した機能
      - name: Create Release Note
        id: create_relase_note
        run: |
          wget -q -O github-changelog-generator.jar https://github.com/spring-io/github-changelog-generator/releases/download/v0.0.7/github-changelog-generator.jar
          chmod +x github-changelog-generator.jar

          echo "${GITHUB_REPOSITORY}"
          echo "${{ secrets.GITHUB_TOKEN }}"
          echo "${{steps.get-version.outputs.tagVersion}}"

      #     java -jar github-changelog-generator.jar \
      #         --changelog.repository=${GITHUB_REPOSITORY} \
      #         --github.token=${{ secrets.GITHUB_TOKEN }} \
      #         ${{steps.get-version.outputs.tagVersion}} ./CHANGELOG.md

      #     ls -la

      # # GitHubへのリリース
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{steps.get-version.outputs.tagVersion}}
      #     release_name: Release ${{steps.get-version.outputs.tagVersion}}
      #     body_path: ./CHANGELOG.md
      #     draft: false
      #     prerelease: false

      # # GitHubへAssetをアップロード(今回はtarget/CHANGELOG.mdをアップロードする)
      # - name: Create Release Asset
      #   run: |
      #     mkdir target
      #     mv CHANGELOG.md target/CHANGELOG.md

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./target/CHANGELOG.md
      #     asset_name: CHANGELOG.md
      #     asset_content_type: application/txt