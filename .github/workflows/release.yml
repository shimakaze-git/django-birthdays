name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - release
  # push:
  #   tags:
  #   - '*'

jobs:
  publish:
    # if: github.repository == 'jazzband/django-model-utils'
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: "__token__"
    steps:
      # - uses: actions/checkout@master
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools setuptools_scm wheel twine
          pip list

      - name: Create Build package
        run: |
          python setup.py --version
          python setup.py sdist --format=gztar bdist_wheel
        # python setup.py sdist bdist_wheel

      - name: Run twine check
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine --version
          twine check dist/*

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: django-ordered-model-dist
      #     path: dist

      # - name: Run twine upload (prerelease to test pypi)
      #   env:
      #     TWINE_PASSWORD: ${{ secrets.TWINE_TEST_PASSWORD }}
      #   if: ${{ env.TWINE_PASSWORD != null && github.event.release.prerelease }}
      #   run: twine upload --username __token__ --non-interactive -r testpypi dist/*

      - name: Run twine upload (release)
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        if: ${{ env.TWINE_PASSWORD != null && !github.event.release.prerelease }}
        run: |
          echo ${{ env.TWINE_PASSWORD }}

          twine --version
          twine upload --username __token__ --non-interactive -r pypi dist/*
        # twine upload dist/*
        # twine upload dist/*

  release:
    needs: publish
    # if: github.repository == 'jazzband/django-model-utils'
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: "__token__"
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.pull_request.title }}
          release_name: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false