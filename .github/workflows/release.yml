name: Create Release && Publish pypi

on:
  pull_request:
    types: [closed]
    branches:
      - release
  # push:
  #   branches:
  #     - release
  #   tags:
  #   - '*'

jobs:
  release:
    if: github.event.pull_request.merged == true
    # if: github.repository == 'jazzband/django-model-utils'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.pull_request.title }}
          release_name: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

  publish:
    # if: github.repository == 'jazzband/django-model-utils'
    runs-on: ubuntu-latest
    needs: release
    env:
      TWINE_USERNAME: "__token__"
    steps:
      # - uses: actions/checkout@master
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip --no-cache-dir install --upgrade pip
          pip --no-cache-dir install setuptools setuptools_scm wheel twine
          pip list

      - name: Create Build package
        run: |
          make dist

      # - name: Create Build Document
      #   run: |
      #     make docs

      - name: Run twine check
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine --version
          twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          name: django-jp-birthday-dist
          path: dist

      # - name: Run twine upload (prerelease to test pypi)
      #   env:
      #     TWINE_PASSWORD: ${{ secrets.TWINE_TEST_PASSWORD }}
      #   if: ${{ env.TWINE_PASSWORD != null && github.event.release.prerelease }}
      #   run: twine upload --username __token__ --non-interactive -r testpypi dist/*

      - name: Run twine upload (release)
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        # if: ${{ env.TWINE_PASSWORD != null && !github.event.release.prerelease }}
        if: ${{ env.TWINE_PASSWORD != null }}
        run: |
          echo ${{ env.TWINE_PASSWORD }}
          echo ${{ github.event.release.prerelease }}

          make release
