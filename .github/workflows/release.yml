name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - release
  # push:
  #   tags:
  #   - '*'

jobs:
  build:
    # if: github.repository == 'jazzband/django-model-utils'
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: "__token__"
    steps:
      # - uses: actions/checkout@master
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools setuptools_scm wheel twine
          pip list

      - name: Create Build package
        run: |
          python setup.py --version
        # run: |
        #   python setup.py --version
        #   python setup.py sdist --format=gztar bdist_wheel
        # python setup.py sdist bdist_wheel
        #   twine check dist/*

      - name: Run twine check
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo ${{ env.TWINE_PASSWORD }}
          twine --version

        # twine check dist/*
        # twine upload dist/*

      # - name: Publish package
      #   env:
      #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      #   run: twine upload dist/*

      # - name: Upload packages to Jazzband
      #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     user: jazzband
      #     password: ${{ secrets.JAZZBAND_RELEASE_KEY }}
      #     repository_url: https://jazzband.co/projects/django-model-utils/upload

  publish:
    needs: build
    # if: github.repository == 'jazzband/django-model-utils'
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: "__token__"
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.pull_request.title }}
          release_name: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false